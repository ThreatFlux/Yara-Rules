include "../../private/documents/doc.yar"
include "../../private/documents/docx.yar"

rule Generic_Office_Macro_Downloader {
    meta:
        description = "Detects Office documents with macros that download content from the internet"
        author = "ThreatFlux Analyst"
        date = "2025-03-04"
        version = "1.0"
        reference = "Internal research"
        file_type = "Office Document"
    
    strings:
        // VBA download functions and methods
        $download1 = "URLDownloadToFile" nocase
        $download2 = "Msxml2.XMLHTTP" nocase
        $download3 = "Microsoft.XMLHTTP" nocase
        $download4 = "MSXML2.ServerXMLHTTP" nocase
        $download5 = "CreateObject" nocase
        $download6 = "WinHttp.WinHttpRequest" nocase
        
        // Shell execution
        $exec1 = "Shell" nocase
        $exec2 = "WScript.Shell" nocase
        $exec3 = ".Run" nocase
        $exec4 = "ShellExecute" nocase
        
        // Common macro autorun triggers
        $auto1 = "AutoOpen" nocase
        $auto2 = "Document_Open" nocase
        $auto3 = "Workbook_Open" nocase
        
        // Document hiding techniques
        $hide1 = "Application.Visible = False" nocase
        $hide2 = "Application.ShowWindowsInTaskbar = False" nocase
        $hide3 = "Application.DisplayAlerts = False" nocase
    
    condition:
        // Check for Office document formats
        (DOC_Structure or DOCX_Format) and
        (
            // Require download capability and execution method
            (1 of ($download*) and 1 of ($exec*)) and
            // Plus either autorun capability or hiding technique
            (1 of ($auto*) or 1 of ($hide*))
        )
}


rule Office_Macro_PowerShell_Download {
    meta:
        description = "Detects Office documents with macros that use PowerShell to download content"
        author = "ThreatFlux Analyst"
        date = "2025-03-04"
        version = "1.0"
        reference = "Internal research"
        file_type = "Office Document"
    
    strings:
        // PowerShell indicators
        $ps1 = "powershell" nocase
        $ps2 = "PowerShell.exe" nocase
        $ps3 = "-ExecutionPolicy bypass" nocase
        $ps4 = "-windowstyle hidden" nocase
        $ps5 = "-noprofile" nocase
        $ps6 = "-command" nocase
        
        // Download commands
        $dl1 = "Net.WebClient" nocase
        $dl2 = "DownloadFile" nocase
        $dl3 = "DownloadString" nocase
        $dl4 = "Invoke-WebRequest" nocase
        $dl5 = "wget " nocase
        $dl6 = "curl " nocase
        $dl7 = "Invoke-Expression" nocase
        $dl8 = "IEX" nocase
        
        // Shell execution from VBA
        $exec1 = "Shell" nocase
        $exec2 = "WScript.Shell" nocase
        $exec3 = ".Run" nocase
    
    condition:
        // Check for Office document formats
        (DOC_Structure or DOCX_Format) and
        (
            // Require PowerShell execution with download capability
            (1 of ($ps*) and 1 of ($dl*) and 1 of ($exec*))
        )
}
